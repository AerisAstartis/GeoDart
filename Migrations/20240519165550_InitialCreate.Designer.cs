// <auto-generated />
using System;
using GeoDart.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GeoDart.Migrations
{
    [DbContext(typeof(GeoDartContext))]
    [Migration("20240519165550_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GeoDart.Models.DrillingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("FeedIn")
                        .HasColumnType("real");

                    b.Property<float>("FeedOut")
                        .HasColumnType("real");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<float>("WaterConsumption")
                        .HasColumnType("real");

                    b.Property<float>("WaterPressurte")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("DrillingData");
                });

            modelBuilder.Entity("GeoDart.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Cluster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contractor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drilling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("FeedIn")
                        .HasColumnType("real");

                    b.Property<float>("FeedOut")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("WaterConsumption")
                        .HasColumnType("real");

                    b.Property<float>("WaterPressurte")
                        .HasColumnType("real");

                    b.Property<string>("Well")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Machine");
                });
#pragma warning restore 612, 618
        }
    }
}
